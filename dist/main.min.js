$(document).ready(()=>{$(".team__title").on("click",function(e){e.preventDefault();let t=$(this).siblings(".team__content");const a=$(this).parent(".team__item");a.siblings(".team__item").find(".team__content").css("height",0),$(this).parent().toggleClass("active"),$(this).parent().hasClass("active")?($(this).parent().siblings().removeClass("active"),t.css("height",t.prop("scrollHeight")+"px")):t.css("height",0)})}),$(".board-menu__item").on("click",function(e){e.preventDefault();e=window.matchMedia("(max-width: 768px)").matches;const t=$(this).find(".bm-item__content");$(this).siblings().find(".bm-item__content").css("width",0),$(this).toggleClass("active"),$(this).hasClass("active")?($(this).siblings().removeClass("active"),e?t.css("width",$(window).width()-$(this).find(".bm-item__header").width()*$(this).parent(".board-menu").find(".bm-item__header").length):t.css("width","500px")):t.css("width",0)}),function(){const e=document.querySelector("#humburger"),t=document.querySelector(".fullscrean-menu"),a=document.querySelector(".fullscrean-menu__close"),s=document.body;e.addEventListener("click",e=>{t.classList.add("active"),s.classList.add("body-wrapper"),a.addEventListener("click",e=>{t.classList.remove("active"),s.classList.remove("body-wrapper")})})}(),ymaps.ready(()=>{const e=new ymaps.Map("map",{center:[55.796627,49.119409],zoom:13,controls:[]});const t=new ymaps.GeoObjectCollection({},{draggable:!1,iconLayout:"default#image",iconImageHref:"./img/marker.svg",iconImageSize:[44,54],iconImageOffset:[-3,-42]});[[55.791805,49.113666],[55.809899,49.093185],[55.822082,49.142545]].forEach(e=>{t.add(new ymaps.Placemark(e))}),e.geoObjects.add(t),e.behaviors.disable("scrollZoom")}),$(".form").submit(e=>{e.preventDefault();const t=$(e.currentTarget),a=t.find("[name='name']"),s=t.find("[name='phone']"),n=t.find("[name='comment']"),i=t.find("[name='to']");[a,s,n,i].forEach(e=>{e.removeClass("form__input-error"),""===e.val().trim()&&e.addClass("form__input-error")});const o=$(".modal"),r=o.find(".modal__content");r.removeClass("error__modal"),errorField=t.find(".form__input-error"),0===errorField.length&&$.ajax({url:"https://webdev-api.loftschool.com/sendmail",method:"post",data:{name:a.val(),phone:s.val(),comment:n.val(),to:i.val()},success:e=>{r.text(e.message),$.fancybox.open({src:"#modal",type:"inline"})},error:e=>{e=e.responseJSON.message;r.text(e),r.addClass("error__modal"),$.fancybox.open({src:"#modal",type:"inline"})}}),$(".js__submit-btn").click(e=>{e.preventDefault(),$.fancybox.close()})}),function(){const s=$(".section"),a=$(".maincontent"),n=$(".fixed-menu");let i=!1;s.first().addClass("active");const o=e=>{var t;!1===i&&(i=!0,t=-100*e,(e=>{const t=s.eq(e);"black"===t.attr("data-sidemenu-theme")?n.addClass("fixed-menu_shadowed"):n.removeClass("fixed-menu_shadowed")})(e),a.css({transform:`translateY(${t}%)`}),s.eq(e).addClass("active").siblings().removeClass("active"),n.find(".fixed-menu__item").eq(e).addClass("active").siblings().removeClass("active"),setTimeout(()=>{i=!1},1300))},r=()=>{const e=s.filter(".active"),t=e.next(),a=e.prev();return{next(){t.length&&o(t.index())},prev(){a.length&&o(a.index())}}};$(window).on("wheel",e=>{if(!$(".fullscrean-menu").hasClass("active")){e=e.originalEvent.deltaY;const t=r();0<e&&t.next(),e<0&&t.prev()}}),$(window).on("keydown",e=>{if(!$(".fullscrean-menu").hasClass("active")){var t=e.target.tagName.toLocaleLowerCase();const a=r();if("input"!==t&&"textarea"!==t)switch(e.keyCode){case 38:a.prev();break;case 40:a.next()}}}),$("[data-scroll-to]").click(e=>{e.preventDefault();const t=$(e.currentTarget);e=t.attr("data-scroll-to");const a=$(`[data-section-id=${e}]`);o(a.index())})}(),function(){const t=document.querySelector(".products"),a=$(".product-item").length;$(".product-slider__arrows");const e=$(".product-slider__arrow--left"),s=$(".product-slider__arrow--right");let n=0;const i=document.querySelector(".product-item").clientWidth;e.on("click",function(e){e.preventDefault(),0<n?n--:n=a-1,t.style.left="-"+n*i+"px"}),s.on("click",function(e){e.preventDefault(),n!==a-1?n++:n=0,t.style.left="-"+n*i+"px"})}(),$(document).ready(()=>{$(".interactive-avatar__link").on("click",function(e){e.preventDefault();const t=$(e.currentTarget);var a,e=t.attr("data-open");const s=(a=e,$(".reviews__item").filter((e,t)=>$(t).attr("data-linked-with")===a)),n=t.closest(".reviews__switchcer-item");s.addClass("active").siblings().removeClass("active"),n.addClass("active").siblings().removeClass("active")})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
